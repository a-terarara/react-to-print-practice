{"version":3,"sources":["components/print.js","components/profile.js","services/profiles.js","pages/report.js","serviceWorker.js","index.js"],"names":["CustomTextField","props","TextField","label","value","fullWidth","margin","variant","Print","this","classes","src","Paper","className","root","Typography","component","Grid","container","spacing","item","xs","name","birthdate","sex","image","style","width","address","telno","React","Component","withStyles","theme","padding","useStyles","makeStyles","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","Profile","componentRef","useRef","Card","CardMedia","title","CardContent","gutterBottom","CardActions","trigger","Button","size","color","content","current","ref","Preview","useState","open","setOpen","handleClose","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","profiles","icon","marginRight","heroContent","backgroundColor","palette","background","paper","heroButtons","marginTop","footer","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","CssBaseline","AppBar","position","Toolbar","noWrap","Container","maxWidth","align","map","p","key","sm","md","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"geAcMA,EAAkB,SAAAC,GACtB,OACE,kBAACC,EAAA,EAAD,CACEC,MAAOF,EAAME,MACbC,MAAOH,EAAMG,MACbC,WAAS,EACTC,OAAO,SACPC,QAAQ,cAKRC,E,iLACM,IAAD,EACkBC,KAAKR,MAAtBS,EADD,EACCA,QAASC,EADV,EACUA,IACjB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAOC,UAAWH,EAAQI,MACxB,kBAACC,EAAA,EAAD,CAAYR,QAAQ,KAAKS,UAAU,MAAnC,wCAIA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CAAiBlB,MAAM,eAAKC,MAAOO,EAAIW,QAEzC,kBAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAiBlB,MAAM,2BAAOC,MAAOO,EAAIY,aAE3C,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAiBlB,MAAM,eAAKC,MAAOO,EAAIa,SAI7C,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,yBACEV,IAAKA,EAAIc,MACTC,MAAO,CAAEC,MAAO,WAGpB,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CACElB,MAAM,eACNC,MAAOO,EAAIiB,WAGf,kBAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAiBlB,MAAM,2BAAOC,MAAOO,EAAIkB,gB,GArCnCC,IAAMC,WAmDXC,eArEA,SAAAC,GAAK,MAAK,CACvBnB,KAAM,CACJoB,QAASD,EAAMd,QAAQ,EAAG,OAmEfa,CAAmBxB,GC5D5B2B,EAAYC,aAAW,SAAAH,GAAK,MAAK,CACrCI,SAAU,CACRC,WAAYL,EAAMd,QAAQ,GAC1BoB,cAAeN,EAAMd,QAAQ,IAE/BqB,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTN,WAAY,UAEdO,YAAa,CACXC,SAAU,OAIC,SAASC,EAAQ9C,GAC9B,IAAMS,EAAUyB,IACVa,EAAeC,mBACbtC,EAAQV,EAARU,IAER,OACE,kBAACuC,EAAA,EAAD,CAAMrC,UAAWH,EAAQ8B,MACvB,kBAACW,EAAA,EAAD,CACEtC,UAAWH,EAAQkC,UACnBnB,MAAOd,EAAIc,MACX2B,MAAOzC,EAAIW,OAEb,kBAAC+B,EAAA,EAAD,CAAaxC,UAAWH,EAAQmC,aAC9B,kBAAC9B,EAAA,EAAD,CAAYuC,cAAY,EAAC/C,QAAQ,KAAKS,UAAU,MAC7CL,EAAIW,OAGT,kBAACiC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAS5C,IAAKA,IACd,kBAAC,IAAD,CACE6C,QAAS,kBACP,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,WAA3B,iBAIFC,QAAS,kBAAMZ,EAAaa,WAE9B,yBAAKnC,MAAO,CAAEgB,QAAS,SACrB,kBAAC,EAAD,CAAOoB,IAAKd,EAAcrC,IAAKA,OAOzC,IAAMoD,EAAU,SAAA9D,GACd,IAAM+C,EAAeC,mBADE,EAECnB,IAAMkC,UAAS,GAFhB,mBAEhBC,EAFgB,KAEVC,EAFU,KAGfvD,EAAQV,EAARU,IAMR,SAASwD,IACPD,GAAQ,GAEV,OACE,6BACE,kBAACT,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUS,QATzC,WACEF,GAAQ,KAQN,kCAGA,kBAACG,EAAA,EAAD,CACEJ,KAAMA,EACNK,QAASH,EACTI,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,UAAyC/D,EAAIW,KAA7C,+FACA,kBAACqD,EAAA,EAAD,KACE,kBAAC,EAAD,CAAOb,IAAKd,EAAcrC,IAAKA,KAEjC,kBAACiE,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,CAAQW,QAASD,EAAaR,MAAM,WAApC,kCAGA,kBAAC,IAAD,CACEH,QAAS,kBACP,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,WAA3B,iBAIFC,QAAS,kBAAMZ,EAAaa,eC3G3BgB,EAAW,CACtB,CACEvD,KAAM,SACNG,MAAO,8DACPF,UAAW,yCACXC,IAAK,eACLI,QAAS,6FACTC,MAAO,iBCKLM,EAAYC,aAAW,SAAAH,GAAK,MAAK,CACrC6C,KAAM,CACJC,YAAa9C,EAAMd,QAAQ,IAE7B6D,YAAa,CACXC,gBAAiBhD,EAAMiD,QAAQC,WAAWC,MAC1ClD,QAASD,EAAMd,QAAQ,EAAG,EAAG,IAE/BkE,YAAa,CACXC,UAAWrD,EAAMd,QAAQ,IAE3BkB,SAAU,CACRC,WAAYL,EAAMd,QAAQ,GAC1BoB,cAAeN,EAAMd,QAAQ,IAE/BqB,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTN,WAAY,UAEdO,YAAa,CACXC,SAAU,GAEZyC,OAAQ,CACNN,gBAAiBhD,EAAMiD,QAAQC,WAAWC,MAC1ClD,QAASD,EAAMd,QAAQ,QC5BPqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBFsCD,WACb,IAAMpF,EAAUyB,IAEhB,OACE,kBAAC,IAAM4D,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACpF,EAAA,EAAD,CAAYR,QAAQ,KAAKoD,MAAM,UAAUyC,QAAM,GAA/C,sDAKJ,8BAEE,yBAAKvF,UAAWH,EAAQsE,aACtB,kBAACqB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACvF,EAAA,EAAD,CACEC,UAAU,KACVT,QAAQ,KACRgG,MAAM,SACN5C,MAAM,cACNL,cAAY,GALd,sDAWJ,kBAAC+C,EAAA,EAAD,CAAWxF,UAAWH,EAAQ2B,SAAUiE,SAAS,MAE/C,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtB0D,EAAS2B,KAAI,SAAAC,GAAC,OACb,kBAACxF,EAAA,EAAD,CAAMG,MAAI,EAACsF,IAAKD,EAAGpF,GAAI,GAAIsF,GAAI,EAAGC,GAAI,GACpC,kBAAC7D,EAAD,CAASpC,IAAK8F,WAOxB,4BAAQ5F,UAAWH,EAAQ6E,QACzB,kBAACxE,EAAA,EAAD,CAAYR,QAAQ,KAAKgG,MAAM,SAASjD,cAAY,GAApD,UAGA,kBAACvC,EAAA,EAAD,CACER,QAAQ,YACRgG,MAAM,SACN5C,MAAM,gBACN3C,UAAU,KAJZ,oDElFQ,MAAY6F,SAASC,eAAe,SD2H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d124ad80.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n});\r\n\r\nconst CustomTextField = props => {\r\n  return (\r\n    <TextField\r\n      label={props.label}\r\n      value={props.value}\r\n      fullWidth\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n\r\nclass Print extends React.Component {\r\n  render() {\r\n    const { classes, src } = this.props;\r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n            プロフィール\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={9}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={10}>\r\n                  <CustomTextField label=\"氏名\" value={src.name} />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <CustomTextField label=\"生年月日\" value={src.birthdate} />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <CustomTextField label=\"性別\" value={src.sex} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <img\r\n                src={src.image}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <CustomTextField\r\n                label=\"住所\"\r\n                value={src.address}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <CustomTextField label=\"電話番号\" value={src.telno} />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPrint.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  src: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Print);\r\n","import React, { useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nimport Print from \"./print\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8)\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  const componentRef = useRef();\r\n  const { src } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.cardMedia}\r\n        image={src.image}\r\n        title={src.name}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {src.name}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Preview src={src} />\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button size=\"small\" color=\"primary\">\r\n              印刷\r\n            </Button>\r\n          )}\r\n          content={() => componentRef.current}\r\n        />\r\n        <div style={{ display: \"none\" }}>\r\n          <Print ref={componentRef} src={src} />\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Preview = props => {\r\n  const componentRef = useRef();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { src } = props;\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        プレビュー\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{`${src.name}のプロフィールを印刷しますか？`}</DialogTitle>\r\n        <DialogContent>\r\n          <Print ref={componentRef} src={src} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            キャンセル\r\n          </Button>\r\n          <ReactToPrint\r\n            trigger={() => (\r\n              <Button size=\"small\" color=\"primary\">\r\n                印刷\r\n              </Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","export const profiles = [\r\n  {\r\n    name: \"terara\",\r\n    image: \"https://avatars1.githubusercontent.com/u/27805556?s=460&v=4\",\r\n    birthdate: \"令和元年1月1日\",\r\n    sex: \"不詳\",\r\n    address: \"東京都ｘｘ区ｙｙｚｚｚｚ１－１\",\r\n    telno: \"03-xxxx-yyyy\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Profile from \"../components/profile\";\r\nimport { profiles } from \"../services/profiles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6)\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8)\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nexport default function Report() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            印刷してくれる君\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              プロフィール一覧\r\n            </Typography>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {profiles.map(p => (\r\n              <Grid item key={p} xs={12} sm={6} md={4}>\r\n                <Profile src={p} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Report from './pages/report';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Report />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}